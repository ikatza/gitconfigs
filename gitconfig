# -*- mode: sh -*-
[user]
       name = NAME
       email = EMAIL

[alias]
	# a = add --all
	# a-p = add --all --patch
	# ainit = "!git init && git add --all && git commit -m 'initial commit'"
	amend = commit --amend
	backup = tag BACKUP
	backup-restore = reset --hard BACKUP
	br = branch
	bra = branch -vv
        checkpoint = "!f(){ git stash push -m \"$1\"; git stash apply; };f"
	ci = commit
	ci-m = commit -m
	# clone-svnsync = svn clone --use-svnsync-props
	co = checkout
	di = diff
	# emerge = merge --edit --no-ff
	# export = "!touch \"$(git rev-parse --git-dir)/git-daemon-export-ok\""
	# fa = fetch --all
	# follow = log --oneline --follow --stat --summary --
	# fpush = push --force-with-lease
	# ftime = "!date +'--date=%s' -r"
	# fetch-notes = "!git config --add remote.origin.fetch \"+refs/notes/*:refs/notes/*\" && git fetch origin"
	# fetch-pr = "!git config --add remote.origin.fetch \"+refs/pull/*/head:refs/remotes/pr/*\" && git fetch origin"
	graph = log --graph --date-order -C -M --pretty=format:\"%C(auto,yellow)%h %C(auto,green)%ad %C(auto,Cyan)%<(17,trunc)%aN%C(auto)%d  %C(auto,reset)%s\" --all --date=short
	# in = log --oneline --decorate ..@{upstream}
        last = log -1 HEAD
        lg = log --pretty=\"%C(auto,yellow)%h %C(auto,green)%ad %C(auto,Cyan)%<(17,trunc)%aN%C(auto)%d  %C(auto,reset)%s\" --date=short
	logs = log --show-signature
	# lost = "!git fsck | awk '/dangling commit/ {print $3 \"^!\"}' | xargs git log"
	ls = ls-files
	lsf = ls-files
	lsr = "!_() { [ \"$1\" ] || set -- HEAD; git ls-tree -r \"$@\"; }; _"
	mend = commit --amend --reuse-message HEAD
        mergetest = "!f(){ git merge --no-commit --no-ff \"$1\"; git merge --abort; echo \"Merge aborted\"; };f "
	# mkobject = hash-object --stdin -w
	# out = log --oneline --decorate @{upstream}..
	# rbc = rebase --continue
	# rbs = rebase -i
	# re = rebase
	# rec = rebase --continue
	# refs = for-each-ref
	# repack-to-alternate = repack -dal
	# repack-to-local = repack -da
        reverse = checkout -p
	# sg = diff --cached
	st = status
	staged = diff --cached
        sh = stash
	sl = stash list
	sa = stash apply
	ss = stash show -p
	tg = log --oneline --decorate --graph
	tgs = log --format=\"%C(yellow)%h%C(reset)%C(cyan)% GS%C(reset) %s\" --graph
	# tip = !git --no-pager log -1 --decorate --abbrev-commit --date=relative
	uncommit = reset HEAD^
	undo = reset --soft HEAD^
	# unexport = "!rm -v \"$(git rev-parse --git-dir)/git-daemon-export-ok\""
        unstage = reset HEAD --
	wdiff = diff --word-diff
	wshow = show --word-diff
	ic = commit
	# tig = !tig

[advice]
	# detachedHead = false
	# pushNonFastForward = false
	statusHints = false

[apply]
	whitespace = nowarn

[cola]
	spellcheck = true

[color]
	branch = auto
	diff = auto
	status = auto
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold
	old = red bold
	new = green bold

[github]
        user = ikatza

[color "grep"]
	filename = magenta
	linenumber = green

[color "status"]
	added = green
	changed = yellow
	untracked = cyan

[core]
	whitespace = -trailing-space,-indent-with-non-tab,-tab-in-indent
	excludesfile = ~/.gitignore
	editor = emacs -nw --quick

[diff]
        algorithm = histogram
	tool = meld
	renames = true

[diff "jupyternotebook"]
	command = git-nbdiffdriver diff

[difftool]
	prompt = false

[difftool "meld"]
	trustExitCode = true
	cmd = open -W -a Meld --args \"$LOCAL\" \"$PWD/$REMOTE\"

[difftool "nbdime"]
	cmd = git-nbdifftool diff \"$LOCAL\" \"$REMOTE\" \"$BASE\"

[grep]
        lineNumber = true
        extendedRegexp = true
        break = true
        heading = true

[log]
        decorate = auto

[merge]
	tool = meld
	conflictstyle = diff3

[merge "jupyternotebook"]
	driver = git-nbmergedriver merge %O %A %B %L %P
	name = jupyter notebook merge driver

[mergetool]
	prompt = false

[mergetool "meld"]
	trustExitCode = true
	cmd = open -W -a Meld --args --auto-merge \"$PWD/$LOCAL\" \"$PWD/$BASE\" \"$PWD/$REMOTE\" --output=\"$PWD/$MERGED\"

[mergetool "nbdime"]
	cmd = git-nbmergetool merge \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\"

[push]
        default = current
